using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class FoxAirline2
{
    int[] p, a, b;
    int n;

    bool aux(int curr, int nbPar)
    {
        if(curr == n)
        {
            int nbEdge = 0;
            for (int i = 0; i < a.Length; ++i)
                if (p[a[i]] != p[b[i]])
                    ++nbEdge;
            if (nbEdge < 2 * (nbPar - 1))
                return false;
        }
        else
        {
            for(int i=0;i< curr;++i)
               if(p[i] == i)
                {
                    p[curr] = i;
                    if (!aux(curr + 1, nbPar))
                        return false;
                }
            p[curr] = curr;
            if (!aux(curr + 1, nbPar + 1))
                return false;

        }
        return true;
    }

    public string isPossible(int n, int[] a, int[] b)
    {
        p = new int[n+1];
        this.a = a;
        this.b = b;
        this.n = n;
        p[0] = 0;
        if (!aux(1, 1))
            return "Impossible";

        return "Possible";
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    #region Testing code generated by KawigiEdit
    [STAThread]
    private static Boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, Boolean hasAnswer, string p3)
    {
        Console.Write("Test " + testNum + ": [" + p0 + "," + "{");
        for (int i = 0; p1.Length > i; ++i)
        {
            if (i > 0)
            {
                Console.Write(",");
            }
            Console.Write(p1[i]);
        }
        Console.Write("}" + "," + "{");
        for (int i = 0; p2.Length > i; ++i)
        {
            if (i > 0)
            {
                Console.Write(",");
            }
            Console.Write(p2[i]);
        }
        Console.Write("}");
        Console.WriteLine("]");
        FoxAirline2 obj;
        string answer;
        obj = new FoxAirline2();
        DateTime startTime = DateTime.Now;
        answer = obj.isPossible(p0, p1, p2);
        DateTime endTime = DateTime.Now;
        Boolean res;
        res = true;
        Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
        if (hasAnswer)
        {
            Console.WriteLine("Desired answer:");
            Console.WriteLine("\t" + "\"" + p3 + "\"");
        }
        Console.WriteLine("Your answer:");
        Console.WriteLine("\t" + "\"" + answer + "\"");
        if (hasAnswer)
        {
            res = answer == p3;
        }
        if (!res)
        {
            Console.WriteLine("DOESN'T MATCH!!!!");
        }
        else if ((endTime - startTime).TotalSeconds >= 2)
        {
            Console.WriteLine("FAIL the timeout");
            res = false;
        }
        else if (hasAnswer)
        {
            Console.WriteLine("Match :-)");
        }
        else {
            Console.WriteLine("OK, but is it right?");
        }
        Console.WriteLine("");
        return res;
    }
    public static void Main(string[] args)
    {
        Boolean all_right;
        all_right = true;

        int p0;
        int[] p1;
        int[] p2;
        string p3;

        // ----- test 0 -----
        p0 = 4;
        p1 = new int[] { 0, 0, 0, 1, 1, 2 };
        p2 = new int[] { 1, 2, 3, 2, 3, 3 };
        p3 = "Possible";
        all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = 6;
        p1 = new int[] { 0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 0 };
        p2 = new int[] { 1, 2, 3, 4, 2, 3, 4, 3, 4, 4, 5 };
        p3 = "Impossible";
        all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = 5;
        p1 = new int[] { 0, 0, 0, 1, 1, 2, 2, 3 };
        p2 = new int[] { 1, 2, 4, 2, 4, 3, 4, 4 };
        p3 = "Possible";
        all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = 2;
        p1 = new int[] { 0, 1, 1 };
        p2 = new int[] { 1, 0, 0 };
        p3 = "Possible";
        all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = 10;
        p1 = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8 };
        p2 = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5, 6, 7, 8, 9, 3, 4, 5, 6, 7, 8, 9, 4, 5, 6, 7, 8, 9, 5, 6, 7, 8, 9, 6, 7, 8, 9, 7, 8, 9, 8, 9, 9 };
        p3 = "Possible";
        all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
        // ------------------

        // ----- test 5 -----
        p0 = 2;
        p1 = new int[] { 0 };
        p2 = new int[] { 1 };
        p3 = "Impossible";
        all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
        // ------------------

        if (all_right)
        {
            Console.WriteLine("You're a stud (at least on the example cases)!");
        }
        else {
            Console.WriteLine("Some of the test cases had errors.");
        }
        Console.ReadKey();
    }
    #endregion
    // END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
